---
# Copyright 2015, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Set facts for the AIO bootstrap process
  hosts: localhost
  user: root
  tasks:
    - name: Set user_variables_overrides fact
      set_fact:
        user_variables_overrides:
          ## Three vars below migrated from existing boostrap-aio task.
          apply_security_hardening: "{{ rpco_deploy_hardening }}"
          # Tempest is turned off to prevent the tests from running by default
          tempest_run: no
          tempest_install: no
          # This version is proposed to openstack-ansible-os_tempest
          # master, but won't be backported all the way, so overridden here.
          cirros_version: 0.3.5
          # needs to be overridden to ensure that SHAs match cirros_version
          # escaped jinja markup so that its not templated during bootstrap.
          tempest_images:
            - url: "http://download.cirros-cloud.net/0.3.5/cirros-0.3.5-x86_64-disk.img"
              sha256: "e137062a4dfbb4c225971b67781bc52183d14517170e16a3841d16f962ae7470"
            - url: "http://download.cirros-cloud.net/0.3.5/cirros-0.3.5-x86_64-uec.tar.gz"
              sha256: "32ca0867f4099f33537625a2fcb1bc5fea1621c62833cdc58eaef2f93e10f154"


    # migrated from rpc-gating/playbooks/vars/all.yml
    - name: Set gating overrides fact
      set_fact:
        gating_user_variables_overrides:
          maas_notification_plan: npTechnicalContactsEmail
          nova_virt_type: qemu
          maas_auth_method: "token"
          maas_auth_token: "{{lookup('env', 'MAAS_AUTH_TOKEN')}}"
          maas_api_url: "{{lookup('env', 'MAAS_API_URL')}}"
          tempest_swift_container_sync: False
          tempest_swift_discoverable_apis:
            - bulk
            - object
            - container_quotas
            - slo
            - tempurl
          # NOTE(mattt): This can be removed once we drop gating osa's stable/mitaka
          tempest_tempest_conf_overrides:
            object-storage:
              reseller_admin_role: ResellerAdmin
            compute-feature-enabled:
              personality: false
              attach_encrypted_volume: false
            volume-feature-enabled:
              snapshot: true
          # This is being increased from the default of 85 as the default value may be
          # too low for the liberty->mitaka upgrade job where more space is used by
          # additional packages, venvs, logs, etc.
          percent_used_critical_threshold: 95
      when:
        - lookup ('env', 'JOB_NAME') != ""
    - name: Add gating user vars to user_variables_overrides
      set_fact:
        user_variables_overrides: "{{ user_variables_overrides|combine(gating_user_variables_overrides)}}"
      when:
        - lookup ('env', 'JOB_NAME') != ""

    # migrated from rpc-gating/rpc_jobs/rpc_aio.yml
    - name: Set scenario specific user variables
      set_fact:
        scenario_user_variables_overrides:
          ceph:
            ceph_stable_release: "hammer"
            cinder_cinder_conf_overrides:
                DEFAULT:
                    default_volume_type: ceph
            cinder_service_backup_driver: cinder.backup.drivers.ceph
            tempest_service_available_swift: false
            glance_default_store: rbd
            nova_libvirt_images_rbd_pool: vms
    - name: Add scenario user vars to user_variables_overrides
      set_fact:
        user_variables_overrides: "{{ user_variables_overrides|combine(scenario_user_variables_overrides[SCENARIO])}}"
      when:
        - SCENARIO is defined
        - SCENARIO in scenario_user_variables_overrides

    # migrated from rpc-gating/rpc_jobs/rpc_aio.yml
    - name: Set trigger specific user variables
      set_fact:
        trigger_user_variables_overrides:
          pr:
            maas_use_api: false
    - name: Add trigger user vars to user_variables_overrides
      set_fact:
        user_variables_overrides: "{{ user_variables_overrides|combine(trigger_user_variables_overrides[TRIGGER])}}"
      when:
        - TRIGGER is defined
        - TRIGGER in trigger_user_variables_overrides

    # migrated from rpc-gating/playbooks/vars/{aio,onmetal}.yml
    - name: Set target specific user variables
      set_fact:
        target_user_variables_overrides:
          aio:
            # Ensure raw_multi_journal is False for upgrades.
            # This is because of the way migrate-yaml.py behaves with the
            # '--for-testing-take-new-vars-only'; meaning that the new
            # default variables will be set in the user_*_variables_overrides.yml
            # file. Since raw_multi_journal is set to False as part of the deploy.sh
            # process, but is set to True in Mitaka's
            # user_rpco_user_variables_defaults.yml file, this will result in
            # migrate-yaml.py adding 'raw_multi_journal: True' in the overrides.
            # To avoid this behavior in gate, it is overridden here.
            # The same is true for journal_size, and maas_notification_plan.
            raw_multi_journal: false
            journal_size: 1024
            osd_directory: true
            tempest_test_sets: "scenario defcore"
            tempest_run_tempest_opts:
              - "--serial"
          mnaio:
            apply_security_hardening: false
            maas_fqdn_extension: ".{{ lookup('env', 'NODE_NAME') }}"
            memory_used_percentage_warning_threshold: 99.0
            memory_used_percentage_critical_threshold: 99.5
            net_max_speed: 1000
            lb_name: "{{ lookup('env', 'NODE_NAME') }}"
            maas_external_ip_address: "{{ ansible_default_ipv4.address }}"
            tempest_testr_opts:
              - '--concurrency 3'
            tempest_run_tempest_opts: []

    - name: Add target user vars to user_variables_overrides
      set_fact:
        user_variables_overrides: "{{ user_variables_overrides|combine(target_user_variables_overrides[TARGET])}}"
      when:
        - TARGET is defined
        - TARGET in target_user_variables_overrides

  vars:
    rpco_deploy_hardening: "{{ lookup('env', 'DEPLOY_HARDENING') }}"
    TRIGGER: "{{ lookup('env', 'TRIGGER')}}"
    SCENARIO: "{{ lookup('env', 'SCENARIO')}}"
    TARGET: "{{ lookup('env', 'TARGET')}}"


- name: Execute the OSA AIO bootstrap
  include: "{{ lookup('env', 'OA_DIR') }}/tests/bootstrap-aio.yml"
  vars:
    bootstrap_host_apt_distribution_suffix_list: "{{ (lookup('env', 'RPCO_APT_ARTIFACTS_AVAILABLE') | bool) | ternary([], ['updates', 'backports']) }}"
    scenario: "{% if lookup('env', 'DEPLOY_MAGNUM') == 'yes' %}magnum{% else %}{{ lookup('env', 'DEPLOY_CEPH') |bool |ternary('ceph','swift') }}{%endif%}"
    bootstrap_host_scenario: "{% if lookup('env', 'DEPLOY_MAGNUM') == 'yes' %}magnum{% else %}{{ lookup('env', 'DEPLOY_CEPH') |bool |ternary('ceph','swift') }}{%endif%}"
    bootstrap_user_variables_template: "user_variables.aio.yml.j2"
    bootstrap_host_user_variables_filename: "user_osa_variables_overrides.yml"
    bootstrap_host_user_secrets_filename: "user_osa_secrets.yml"
    uca_enable: no
    confd_overrides:
      swift:
        - name: cinder.yml.aio
        - name: glance.yml.aio
        - name: heat.yml.aio
        - name: horizon.yml.aio
        - name: keystone.yml.aio
        - name: neutron.yml.aio
        - name: nova.yml.aio
        - name: swift.yml.aio
      magnum:
        - name: cinder.yml.aio
        - name: glance.yml.aio
        - name: heat.yml.aio
        - name: horizon.yml.aio
        - name: keystone.yml.aio
        - name: neutron.yml.aio
        - name: nova.yml.aio
        - name: magnum.yml.aio
      ceph:
        - name: cinder.yml.aio
        - name: glance.yml.aio
        - name: heat.yml.aio
        - name: horizon.yml.aio
        - name: keystone.yml.aio
        - name: neutron.yml.aio
        - name: nova.yml.aio
        - name: swift.yml.aio
        - name: ceph.yml.aio
          path: "{{ lookup('env', 'RPCD_DIR') ~ '/etc/openstack_deploy/conf.d' }}"
    openstack_user_config_overrides:
      shared-infra_hosts:
        aio1:
          affinity:
            galera_container: 3
            rabbit_mq_container: 3
          ip: 172.29.236.100

- name: Execute the RPC-O AIO adjustments
  hosts: localhost
  user: root
  tasks:
    # We need to write out the cinder_backend block here, so we avoid
    # running this block through the config_template module when the
    # upstream bootstrap role puts the conf.d files into place.
    - name: Write out storage hosts and cinder backends to conf.d/ceph.yml
      lineinfile:
        name: "/etc/openstack_deploy/conf.d/ceph.yml"
        line: |
          storage_hosts:
            aio1:
              ip: 172.29.236.100
              container_vars:
                cinder_backends:
                  limit_container_types: cinder_volume
                  ceph:
                    volume_driver: cinder.volume.drivers.rbd.RBDDriver
                    rbd_pool: volumes
                    rbd_ceph_conf: /etc/ceph/ceph.conf
                    rbd_flatten_volume_from_snapshot: 'false'
                    rbd_max_clone_depth: 5
                    rbd_store_chunk_size: 4
                    rados_connect_timeout: -1
                    glance_api_version: 2
                    volume_backend_name: ceph
                    rbd_user: "{%raw%}{{ cinder_ceph_client }}{%endraw%}"
                    rbd_secret_uuid: "{%raw%}{{ cinder_ceph_client_uuid }}{%endraw%}"
      when: "{{ rpco_deploy_ceph | bool }}"

    - name: Ensure that the env.d directory is present
      file:
        path: "/etc/openstack_deploy/env.d"
        state: directory

    - name: Copy the generally applicable RPC-O config files
      copy:
        src: "{{ rpco_cfg_src_path }}/{{ item.name }}"
        dest: "/etc/openstack_deploy/{{ item.name }}"
        mode: "{{ item.mode | default(omit) }}"
      when: "{{ (item.condition | default(True)) | bool }}"
      with_items:
        - name: "user_osa_variables_defaults.yml"
          mode: "0440"
        - name: "env.d/cinder.yml"
        - name: "env.d/elasticsearch.yml"
          condition: "{{ rpco_deploy_elk | bool }}"
        - name: "env.d/glance.yml"
        - name: "env.d/heat.yml"
        - name: "env.d/horizon.yml"
        - name: "env.d/ironic.yml"
        - name: "env.d/keystone.yml"
        - name: "env.d/kibana.yml"
          condition: "{{ rpco_deploy_elk | bool }}"
        - name: "env.d/logstash.yml"
          condition: "{{ rpco_deploy_elk | bool }}"
        - name: "env.d/magnum.yml"
        - name: "env.d/memcache.yml"
        - name: "env.d/neutron.yml"
        - name: "env.d/nova.yml"
        - name: "env.d/pkg_repo.yml"
        - name: "env.d/rsyslog.yml"
        - name: "env.d/swift.yml"
        - name: "env.d/utility.yml"

    - name: Template the RPC-O config files
      config_template:
        src: "{{ rpco_cfg_src_path }}/{{ item.name }}"
        dest: "/etc/openstack_deploy/{{ item.name | regex_replace('.aio$', '') }}"
        config_overrides: "{{ item.override | default({}) }}"
        config_type: "yaml"
      when: "{{ (item.condition | default(True)) | bool }}"
      with_items:
        - name: "user_rpco_secrets.yml"
          override:
            kibana_password: "{{ lookup('env', 'ADMIN_PASSWORD') }}"
        - name: "user_rpco_variables_overrides.yml.aio"
        - name: "env.d/ceph.yml"
          condition: "{{ rpco_deploy_ceph | bool }}"
          override:
            container_skel:
              ceph_osd_container:
                properties:
                  is_metal: false

    - name: Update the RPC-O secrets
      shell: "{{ rpco_base_dir }}/scripts/update-secrets.sh"

  vars:
    rpco_base_dir: "{{ lookup('env', 'BASE_DIR') }}"
    osa_cfg_src_path: "{{ lookup('env', 'OA_DIR') ~ '/etc/openstack_deploy' }}"
    rpco_cfg_src_path: "{{ lookup('env', 'RPCD_DIR') ~ '/etc/openstack_deploy' }}"
    rpco_deploy_ceph: "{{ lookup('env', 'DEPLOY_CEPH') }}"
    rpco_deploy_elk: "{{ lookup('env', 'DEPLOY_ELK') }}"
    rpco_deploy_swift: "{{ lookup('env', 'DEPLOY_SWIFT') }}"
